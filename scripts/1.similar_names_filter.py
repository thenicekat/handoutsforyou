"""
@author: Saphereye
@about: The script using soundex algorithm to cluster similar texts together, the output is a 
txt file with each line containing the similar PS stations
"""
# Importing the libraries
from collections import defaultdict
import jellyfish
import pandas as pd

# Defining the constants
CSV_FILE = 'PS2_master.csv'
OUTPUT_FILE = 'soundex_filter.txt'
IGNORE_FILE = 'ignore.txt'

# Getting the PS station names, putting in set for avoiding repetition
# Replace all company names which have \u0026 with &
df = pd.read_csv(CSV_FILE)
df['Company'] = df['Company'].apply(lambda x: x.replace(r'\u0026', '&'))
df.to_csv(CSV_FILE, index=False)

# Read the ignore file
with open(IGNORE_FILE, 'r') as f:
    IGNORE_FILE = f.read().split('\n')
    

# Get all companies
data = set(df['Company'].apply(lambda x: x.strip())) 

# Grouping them based on key generated by soundex algorithm
grs = defaultdict(list)
for name in data:
    grs[jellyfish.soundex(name)].append(name)
    
# Sort dict based on size of value which is an array
grs = {k: v for k, v in sorted(grs.items(), key=lambda item: len(item[1]))}

# Writing the output to output file
with open(OUTPUT_FILE, 'w') as f:
    for i, j in grs.items():
        if len(j) > 1:
            data_to_write = '<|>'.join(sorted(j))
            if data_to_write not in IGNORE_FILE:
                f.write(data_to_write + '\n')